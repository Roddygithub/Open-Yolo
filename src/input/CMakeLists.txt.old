# Fichier CMake pour le module Input

# Définir les sources du module
set(INPUT_SOURCES
    InputManager.cpp
)

# Créer une bibliothèque pour ce module
add_library(input ${INPUT_SOURCES})

# Définir les propriétés de la cible
set_target_properties(input 
    PROPERTIES
        CXX_STANDARD ${CMAKE_CXX_STANDARD}
        CXX_STANDARD_REQUIRED ${CMAKE_CXX_STANDARD_REQUIRED}
        CXX_EXTENSIONS ${CMAKE_CXX_EXTENSIONS}
        VERSION ${PROJECT_VERSION}
        SOVERSION ${PROJECT_VERSION_MAJOR}
)

# Inclure les répertoires nécessaires
target_include_directories(input
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}
)

# Lier les dépendances
target_link_libraries(input
    PUBLIC
        ${SDL2_LIBRARIES}
        ${X11_LIBRARIES}
    PRIVATE
        ${CMAKE_THREAD_LIBS_INIT}
)

# Installation de la bibliothèque et des en-têtes
install(TARGETS input
    EXPORT ${PROJECT_NAME}Targets
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

# Installation des en-têtes
install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/input/
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/input
    FILES_MATCHING PATTERN "*.hpp"
)
