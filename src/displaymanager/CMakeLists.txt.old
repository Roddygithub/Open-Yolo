# Fichier CMake pour le module displaymanager

# Définir les sources du module
set(DISPLAY_MANAGER_SOURCES
    DisplayManager.cpp
)

# Créer une bibliothèque pour ce module
add_library(displaymanager ${DISPLAY_MANAGER_SOURCES})

# Définir les propriétés de la cible
set_target_properties(displaymanager 
    PROPERTIES
        CXX_STANDARD ${CMAKE_CXX_STANDARD}
        CXX_STANDARD_REQUIRED ${CMAKE_CXX_STANDARD_REQUIRED}
        CXX_EXTENSIONS ${CMAKE_CXX_EXTENSIONS}
        VERSION ${PROJECT_VERSION}
        SOVERSION ${PROJECT_VERSION_MAJOR}
)

# Inclure les répertoires nécessaires
target_include_directories(displaymanager
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
        ${X11_INCLUDE_DIRS}
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${GTKMM_INCLUDE_DIRS}
)

# Lier les dépendances
target_link_libraries(displaymanager
    PUBLIC
        ${X11_LIBRARIES}
        ${X11_Xrandr_LIB}
        ${X11_X11_LIB}
    PRIVATE
        ${GTKMM_LIBRARIES}
        ${GLIBMM_LIBRARIES}
        ${SIGC++_LIBRARIES}
        ${CMAKE_THREAD_LIBS_INIT}
)

# Définitions de compilation
target_compile_definitions(displaymanager
    PRIVATE
        DISPLAYMANAGER_EXPORTS
)

# Installation de la bibliothèque et des en-têtes
install(TARGETS displaymanager
    EXPORT ${PROJECT_NAME}Targets
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

# Installation des en-têtes
if(EXISTS "${CMAKE_SOURCE_DIR}/include/displaymanager" AND IS_DIRECTORY "${CMAKE_SOURCE_DIR}/include/displaymanager")
    install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/displaymanager/
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/displaymanager
        FILES_MATCHING 
            PATTERN "*.hpp"
    )
endif()
