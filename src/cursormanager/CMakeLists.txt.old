# Fichier CMake pour le module cursormanager

# Définir les sources du module
set(CURSOR_MANAGER_SOURCES
    CursorManager.cpp
    ShaderProgram.cpp
)

# Créer une bibliothèque pour ce module
add_library(cursormanager ${CURSOR_MANAGER_SOURCES})

# Définir les propriétés de la cible
set_target_properties(cursormanager 
    PROPERTIES
        CXX_STANDARD ${CMAKE_CXX_STANDARD}
        CXX_STANDARD_REQUIRED ${CMAKE_CXX_STANDARD_REQUIRED}
        CXX_EXTENSIONS ${CMAKE_CXX_EXTENSIONS}
        VERSION ${PROJECT_VERSION}
        SOVERSION ${PROJECT_VERSION_MAJOR}
)

# Inclure les répertoires nécessaires
target_include_directories(cursormanager
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}
)

# Lier les dépendances
target_link_libraries(cursormanager
    PUBLIC
        ${SDL2_LIBRARIES}
        ${SDL2_IMAGE_LIBRARIES}
        ${OPENGL_LIBRARIES}
        ${GLEW_LIBRARIES}
        ${GIF_LIBRARIES}
        ${X11_LIBRARIES}
    PRIVATE
        ${GTKMM_LIBRARIES}
)

# Installation de la bibliothèque et des en-têtes
install(TARGETS cursormanager
    EXPORT ${PROJECT_NAME}Targets
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

# Installation des en-têtes
if(EXISTS "${CMAKE_SOURCE_DIR}/include/cursormanager" AND IS_DIRECTORY "${CMAKE_SOURCE_DIR}/include/cursormanager")
    install(DIRECTORY ${CMAKE_SOURCE_DIR}/include/cursormanager/
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/cursormanager
        FILES_MATCHING PATTERN "*.hpp"
    )
endif()
